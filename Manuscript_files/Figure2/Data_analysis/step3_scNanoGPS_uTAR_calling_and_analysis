for i in /scratch/90days/uqppavit/VLP84_D/*curated.minimap2.bam ; do nohup bash bulk_uTARs.bash $i /afm01/UQ/Q1851/Prakrithi/human_ref/gencode.v43.chr_patch_hapl_scaff.annotation.gtf 50 scripts/ > $i.log ; done
wc -l *_HMM_features/*HMM.bed


find /path/to/*_HMM_features -type f -name '*.bed' -exec sh -c 'awk -v OFS="\t" "{if(NF == 6 && NR == 1) {print \$1, \$2, \$3, \".\", \".\", \$6} else if (NF == 6 && NR > 1) {print \$0}}" {} > "$(dirname "{}")/$(basename "{}" .bed)_HMM.bed"' \;

#delete empty files
find /path/to/directory -type f -empty -delete

cat *HMM_features/*HMM.bed | awk '$3>$2 {print }' | awk '{print $1"\t"$2"\t"$3"\t.\t.\t"$6}' | sortBed -i | bedtools merge -s -c 4,5,6 -o collapse | sed -e 's/+,/+/g' | sed -e 's/+\{2,\}/+/g' | sed -e 's/-,/-/g' | sed -e 's/-\{2,\}/-/g' | awk '{print $1"\t"$2"\t"$3"\t.\t.\t"$6}' > All_HMM.bed


for i in *HMM_features/*HMM.bed ; do gzip $i ; done


cat *HMM_features/*.bed | awk '$2>0 {print }' | awk '$3>$2 {print }' | sortBed -i | bedtools merge -s -c 4,5,6 -o collapse,sum,collapse  | sed -e 's/+,/+/g' | sed -e 's/+\{2,\}/+/g' | sed -e 's/-,/-/g' | sed -e 's/-\{2,\}/-/g' > All_chr.bed


bedtools coverage -b All_chr.bed -a All_HMM.bed -s -counts -split -sorted | less #if last column all 1 --> do next step or use this output file

awk '{print $1"\t"$2"\t"$3"\t"$4"\t"$5"\t"$6"\t1"}' All_HMM.bed > TAR_reads.bed
gzip TAR_reads.bed

Rscript scripts/generate_refFlat_script_both.R /afm01/UQ/Q1851/Prakrithi/human_ref/gencode.v43.chr_patch_hapl_scaff.annotation.refflat.refFlat TAR_reads.bed.gz

awk '$1~/_0$/ {print $3"\t"$5"\t"$6"\t"$1"\t1\t"$4}' TAR_reads.bed.gz.withDir.gencode.v43.chr_patch_hapl_scaff.annotation.refflat.refFlat > uTARs.bed

awk '$1~/_1$/ {print $3"\t"$5"\t"$6"\t"$1"\t1\t"$4}' TAR_reads.bed.gz.withDir.gencode.v43.chr_patch_hapl_scaff.annotation.refflat.refFlat > aTARs.bed


#featurecounts
bedToGenePred uTARs.bed uTARs.genePred
genePredToGtf file uTARs.genePred uTARs.gtf
featureCounts -T 64  -F GTF -a uTARs.gtf -o uTAR_counts_mat.txt ../../VLP84_D/*bam
featureCounts -T 64  -F GTF -a aTARs_final.gtf -o aTARs.mat ../VLP15_B_tmp_remaining/*curated.minimap2.bam

#process featurecounts output
sed 's/\.\.\/\.\.\/VLP84_D\///g' uTAR_counts_mat.txt | sed 's/.curated.minimap2.bam//g' | sed 's/"//g' | cut -f1,7- | awk 'NR>1 {print }' > uTAR_final_mat.txt

sed 's/\.\.\/VLP15_B_tmp_remaining\///g' uTAR_illumina_gtf_mat_stranded.txt | sed 's/.curated.minimap2.bam//g' | sed 's/"//g' | cut -f1,7- | awk 'NR>1 {print }' >  ../VLP15_B_tmp_remaining/illumina_uTAR_counts/TAR_illumina_gtf_mat_stranded.txt

#sum of each featurescount
awk '{sum=0; for(i=2;i<=NF;i++) sum+=$i; print $1,sum}' uTAR_final_mat.txt | less


awk '{for(i=2;i<=NF;i++){if($i!=0){print; break}}}' uTAR_shortRead_final_mat.txt | awk 'NR>1 {print $1}' | awk '$1~/_0$/ {print}' | awk -F"_" '{print $1"\t"$2"\t"$3"\t"$1"_"$2"_"$3"_"$4"_"$5"_"$6"\t.\t"$4}' > uTAR_shortRead_nonZero_uTARs.bed

 awk '{sum=0; for(i=2;i<=NF;i++) sum+=$i; print $1,sum}' uTAR_illumina_gtf_mat_final.txt | awk '$2>3 {print $1}' | awk '$1~/_0$/ {print $1}' | awk -F"_" '{print $1"\t"$2"\t"$3"\t"$1"_"$2"_"$3"_"$4"_"$5"_"$6"\t.\t"$4}' > uTARs_all.bed  ## prints uTARs with sum>3

awk '{sum=0; for(i=2;i<=NF;i++) if ($i > 0) sum+=$i; print $1,sum}' uTAR_illumina_gtf_mat_final.txt | awk '$2>2 {print $1}' | awk '$1~/_0$/ {print $1}'| awk -F"_" '{print $1"\t"$2"\t"$3"\t"$1"_"$2"_"$3"_"$4"_"$5"_"$6"\t.\t"$4}' > uTARs_all_new.bed #min_cells=3

awk '{count=0; for(i=2;i<=NF;i++) if($i > 0) count++; if(count >= 3) print}' uTAR_illumina_gtf_mat_final.txt | awk '$1~/_0$/ {print $1}' |



bedtools intersect -a /afm01/UQ/Q1851/Prakrithi/VLP84_20230405_D1/TAR/uTARs_uniq.bed -b /scratch/90days/uqppavit/TAR-scRNA-seq/from_fastqs/uTAR_shortRead_uniq_final.bed -s -wo | awk '{print $10}â€™ | sort | uniq



## calculate median position of adaptor
grep -A1 -E "CACTGCTT" your_file.fastq | awk '/CACTGCTT/ {pos = length($1)-length("CACTGCTT")+index($1, "CACTGCTT"); positions[NR] = pos} END {n = asort(positions); median = (n % 2 == 0) ? (positions[n/2] + positions[n/2 + 1]) / 2 : positions[(n + 1) / 2]; print median}'

#max position of adaptor
grep -A1 -E "TTCCGATCT" your_file.fastq | awk '/TTCCGATCT/ {pos = length($1)-length("TTCCGATCT")+index($1, "TTCCGATCT"); if (pos > max_pos) max_pos = pos} END {print max_pos}'



#### gene matrix
#after running feature counts script

sed 's/\.\.\///g' gene_counts_mat.txt |  sed 's/.curated.minimap2.bam//g' | sed 's/"//g' | cut -f1,7- | awk 'NR>1 {print }' >  genes_mat.txt
awk '{sum=0; for(i=2;i<=NF;i++) sum+=$i; print $1,sum}' genes_mat.txt | awk '$2>3 {print $1}' > geneIDs.txt
grep -wf geneIDs.txt /QRISdata/Q1851/Prakrithi/human_ref/gencode.v43.chr_patch_hapl_scaff.annotation.gtf > grepped.txt
awk '/protein_coding/ {print $10}' grepped.txt | sort | uniq | wc -l
awk '/protein_coding/ {print $10}' ../../../VLP15_B_tmp_remaining/grepped.txt | sort | uniq | wc -l


awk '/protein_coding/ {print $10"\t"$14}' ../grepped.txt  | sort | uniq | awk '!/protein/ {print}' | sed 's/;//g' | sed 's/"//g' > gene_IDs_rename_list.txt
awk 'BEGIN{OFS="\t"} NR==FNR{a[$1]=$2; next} {printf "%s\t", a[$1]; for(i=2;i<=NF;i++) printf "%s\t",$i; printf "\n"}' gene_IDs_rename_list.txt genes_mat.txt > genes_renamed_mat.txt
awk '!($1 ~ /^[0-9]+$/) {print}' genes_renamed_mat.txt > tmp
mv tmp genes_renamed_mat.txt










####


awk '                                                     
{
    for (i = 1; i <= NF; i++) {
        a[NR, i] = $i
    }
}
NF > maxNF {
    maxNF = NF
}
END {
    for (i = 1; i <= maxNF; i++) {
        for (j = 1; j <= NR; j++) {
            printf "%s%s", a[j, i], (j == NR ? "\n" : "\t")
        }
    }
}' uTAR_uniq_counts_mat_map_ont_processed.txt > uTAR_uniq_counts_mat_map_ont_processed_transposed.txt




### extract mat for barcodes in tissue
grep -wf barcodes_intissue_list.txt uTAR_uniq_counts_mat_map_ont_processed_transposed.txt | awk '                                                     
{
    for (i = 1; i <= NF; i++) {
        a[NR, i] = $i
    }
}
NF > maxNF {
    maxNF = NF
}
END {
    for (i = 1; i <= maxNF; i++) {
        for (j = 1; j <= NR; j++) {
            printf "%s%s", a[j, i], (j == NR ? "\n" : "\t")
        }
    }
}' > uTAR_uniq_counts_mat_map_ont_processed_inTissue.txt




awk '{sum=0; for(i=2;i<=NF;i++) if ($i > 0) sum+=$i; print $1,sum}' uTAR_uniq_counts_mat_map_ont_processed_inTissue.txt | awk '$2>2 {print $1}' | awk '$1~/_0$/ {print $1}'| awk -F"_" '{print $1"\t"$2"\t"$3"\t"$1"_"$2"_"$3"_"$4"_"$5"_"$6"\t.\t"$4}' > uTAR_uniq_counts_mat_map_ont_processed_inTissue_final.bed

awk '{sum=0; for(i=2;i<=NF;i++) if ($i > 0) sum+=$i; print $1,sum}' uTAR_uniq_counts_mat_map_ont_processed_inTissue.txt | awk '$2>2 {print $1}' > uTAR_uniq_counts_mat_map_ont_processed_inTissue_list.txt
grep -f uTAR_uniq_counts_mat_map_ont_processed_inTissue_list.txt uTAR_uniq_counts_mat_map_ont_processed_inTissue.txt > uTAR_uniq_counts_mat_map_ont_processed_inTissue_final.txt



